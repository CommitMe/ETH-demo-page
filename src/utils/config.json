{
  "BasicToken": {
    "abi": [
      {
        "constant": true,
        "inputs": [],
        "name": "totalSupply",
        "outputs": [
          {
            "name": "",
            "type": "uint256"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [
          {
            "name": "_owner",
            "type": "address"
          }
        ],
        "name": "balanceOf",
        "outputs": [
          {
            "name": "balance",
            "type": "uint256"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "_to",
            "type": "address"
          },
          {
            "name": "_value",
            "type": "uint256"
          }
        ],
        "name": "transfer",
        "outputs": [
          {
            "name": "",
            "type": "bool"
          }
        ],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "name": "from",
            "type": "address"
          },
          {
            "indexed": true,
            "name": "to",
            "type": "address"
          },
          {
            "indexed": false,
            "name": "value",
            "type": "uint256"
          }
        ],
        "name": "Transfer",
        "type": "event"
      }
    ],
    "bytecode": "0x6060604052341561000f57600080fd5b6103ab8061001e6000396000f30060606040526000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806318160ddd1461005357806370a082311461007c578063a9059cbb146100c957600080fd5b341561005e57600080fd5b610066610123565b6040518082815260200191505060405180910390f35b341561008757600080fd5b6100b3600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610129565b6040518082815260200191505060405180910390f35b34156100d457600080fd5b610109600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610172565b604051808215151515815260200191505060405180910390f35b60005481565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156101af57600080fd5b61020182600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461034890919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061029682600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461036190919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b600082821115151561035657fe5b818303905092915050565b600080828401905083811015151561037557fe5b80915050929150505600a165627a7a723058209c00d48e27fdb130234c8cad81e2934548dec564a1c67e5cc3099577a239c2410029",
    "bytecode_runtime": "0x60606040526000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806318160ddd1461005357806370a082311461007c578063a9059cbb146100c957600080fd5b341561005e57600080fd5b610066610123565b6040518082815260200191505060405180910390f35b341561008757600080fd5b6100b3600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610129565b6040518082815260200191505060405180910390f35b34156100d457600080fd5b610109600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610172565b604051808215151515815260200191505060405180910390f35b60005481565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156101af57600080fd5b61020182600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461034890919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061029682600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461036190919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b600082821115151561035657fe5b818303905092915050565b600080828401905083811015151561037557fe5b80915050929150505600a165627a7a723058209c00d48e27fdb130234c8cad81e2934548dec564a1c67e5cc3099577a239c2410029",
    "devdoc": {
      "methods": {
        "balanceOf(address)": {
          "details": "Gets the balance of the specified address.",
          "params": {
            "_owner": "The address to query the the balance of."
          },
          "return": "An uint256 representing the amount owned by the passed address."
        },
        "transfer(address,uint256)": {
          "details": "transfer token for a specified address",
          "params": {
            "_to": "The address to transfer to.",
            "_value": "The amount to be transferred."
          }
        }
      },
      "title": "Basic token"
    },
    "direct_dependencies": [],
    "full_dependencies": [],
    "linkrefs": [],
    "linkrefs_runtime": [],
    "metadata": {
      "compiler": {
        "version": "0.4.17-develop.2017.9.27+commit.bdeb9e52"
      },
      "language": "Solidity",
      "output": {
        "abi": [
          {
            "constant": true,
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "_owner",
                "type": "address"
              }
            ],
            "name": "balanceOf",
            "outputs": [
              {
                "name": "balance",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_to",
                "type": "address"
              },
              {
                "name": "_value",
                "type": "uint256"
              }
            ],
            "name": "transfer",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "from",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "to",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "Transfer",
            "type": "event"
          }
        ],
        "devdoc": {
          "methods": {
            "balanceOf(address)": {
              "details": "Gets the balance of the specified address.",
              "params": {
                "_owner": "The address to query the the balance of."
              },
              "return": "An uint256 representing the amount owned by the passed address."
            },
            "transfer(address,uint256)": {
              "details": "transfer token for a specified address",
              "params": {
                "_to": "The address to transfer to.",
                "_value": "The amount to be transferred."
              }
            }
          },
          "title": "Basic token"
        },
        "userdoc": {
          "methods": {}
        }
      },
      "settings": {
        "compilationTarget": {
          "contracts/token/BasicToken.sol": "BasicToken"
        },
        "libraries": {},
        "optimizer": {
          "enabled": false,
          "runs": 200
        },
        "remappings": []
      },
      "sources": {
        "contracts/math/SafeMath.sol": {
          "keccak256": "0x3b3ed9d0691d123374b8a708fd29297acfbab4b5c04943eb1b6fbd3a081af53f",
          "urls": [
            "bzzr://608c82e3c21a2d7dff5076604ac00287752cb3d662d84088bc4e062c0a7d5386"
          ]
        },
        "contracts/token/BasicToken.sol": {
          "keccak256": "0xc3f91b60a61ee54633aeccfc04b788cb9b7326d67dfa0d9df3f24c16269bea9e",
          "urls": [
            "bzzr://0fae1d2f775f39c54bd88712d8389565eec72841506e58afd10357fbd25ecbfe"
          ]
        },
        "contracts/token/ERC20Basic.sol": {
          "keccak256": "0xf3cea775f019fe99571ed85b792e2e34014976813155a2d51dbfa6b45df1bc44",
          "urls": [
            "bzzr://5a5100dd89548e0c8c04d4a87da1d02ddfaafb547b0377bd24a5735b56444658"
          ]
        }
      },
      "version": 1
    },
    "name": "BasicToken",
    "ordered_full_dependencies": [],
    "source_path": "contracts/token/BasicToken.sol",
    "userdoc": {
      "methods": {}
    }
  },
  "DToken": {
    "abi": [
      {
        "constant": true,
        "inputs": [],
        "name": "name",
        "outputs": [
          {
            "name": "",
            "type": "string"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "_spender",
            "type": "address"
          },
          {
            "name": "_value",
            "type": "uint256"
          }
        ],
        "name": "approve",
        "outputs": [
          {
            "name": "",
            "type": "bool"
          }
        ],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [],
        "name": "totalSupply",
        "outputs": [
          {
            "name": "",
            "type": "uint256"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "_from",
            "type": "address"
          },
          {
            "name": "_to",
            "type": "address"
          },
          {
            "name": "_value",
            "type": "uint256"
          }
        ],
        "name": "transferFrom",
        "outputs": [
          {
            "name": "",
            "type": "bool"
          }
        ],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [],
        "name": "INITIAL_SUPPLY",
        "outputs": [
          {
            "name": "",
            "type": "uint256"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [],
        "name": "decimals",
        "outputs": [
          {
            "name": "",
            "type": "uint8"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "_spender",
            "type": "address"
          },
          {
            "name": "_subtractedValue",
            "type": "uint256"
          }
        ],
        "name": "decreaseApproval",
        "outputs": [
          {
            "name": "success",
            "type": "bool"
          }
        ],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [
          {
            "name": "_owner",
            "type": "address"
          }
        ],
        "name": "balanceOf",
        "outputs": [
          {
            "name": "balance",
            "type": "uint256"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [],
        "name": "symbol",
        "outputs": [
          {
            "name": "",
            "type": "string"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "_to",
            "type": "address"
          },
          {
            "name": "_value",
            "type": "uint256"
          }
        ],
        "name": "transfer",
        "outputs": [
          {
            "name": "",
            "type": "bool"
          }
        ],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "_spender",
            "type": "address"
          },
          {
            "name": "_addedValue",
            "type": "uint256"
          }
        ],
        "name": "increaseApproval",
        "outputs": [
          {
            "name": "success",
            "type": "bool"
          }
        ],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [
          {
            "name": "_owner",
            "type": "address"
          },
          {
            "name": "_spender",
            "type": "address"
          }
        ],
        "name": "allowance",
        "outputs": [
          {
            "name": "remaining",
            "type": "uint256"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "constructor"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "name": "owner",
            "type": "address"
          },
          {
            "indexed": true,
            "name": "spender",
            "type": "address"
          },
          {
            "indexed": false,
            "name": "value",
            "type": "uint256"
          }
        ],
        "name": "Approval",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "name": "from",
            "type": "address"
          },
          {
            "indexed": true,
            "name": "to",
            "type": "address"
          },
          {
            "indexed": false,
            "name": "value",
            "type": "uint256"
          }
        ],
        "name": "Transfer",
        "type": "event"
      }
    ],
    "bytecode": "0x6060604052341561000f57600080fd5b600460ff16600a0a60d202600081905550600460ff16600a0a60d202600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506110f38061007d6000396000f300606060405236156100b8576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde03146100bd578063095ea7b31461014b57806318160ddd146101a557806323b872dd146101ce5780632ff2e9dc14610247578063313ce56714610270578063661884631461029f57806370a08231146102f957806395d89b4114610346578063a9059cbb146103d4578063d73dd6231461042e578063dd62ed3e14610488575b600080fd5b34156100c857600080fd5b6100d06104f4565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101105780820151818401526020810190506100f5565b50505050905090810190601f16801561013d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561015657600080fd5b61018b600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190505061052d565b604051808215151515815260200191505060405180910390f35b34156101b057600080fd5b6101b861061f565b6040518082815260200191505060405180910390f35b34156101d957600080fd5b61022d600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610625565b604051808215151515815260200191505060405180910390f35b341561025257600080fd5b61025a610911565b6040518082815260200191505060405180910390f35b341561027b57600080fd5b61028361091f565b604051808260ff1660ff16815260200191505060405180910390f35b34156102aa57600080fd5b6102df600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610924565b604051808215151515815260200191505060405180910390f35b341561030457600080fd5b610330600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610bb5565b6040518082815260200191505060405180910390f35b341561035157600080fd5b610359610bfe565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561039957808201518184015260208101905061037e565b50505050905090810190601f1680156103c65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156103df57600080fd5b610414600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610c37565b604051808215151515815260200191505060405180910390f35b341561043957600080fd5b61046e600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610e0d565b604051808215151515815260200191505060405180910390f35b341561049357600080fd5b6104de600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611009565b6040518082815260200191505060405180910390f35b6040805190810160405280600681526020017f44546f6b656e000000000000000000000000000000000000000000000000000081525081565b600081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b60005481565b600080600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415151561066457600080fd5b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905061073583600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461109090919063ffffffff16565b600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506107ca83600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546110a990919063ffffffff16565b600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610820838261109090919063ffffffff16565b600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a360019150509392505050565b600460ff16600a0a60d20281565b600481565b600080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905080831115610a35576000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610ac9565b610a48838261109090919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600191505092915050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6040805190810160405280600381526020017f44544e000000000000000000000000000000000000000000000000000000000081525081565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610c7457600080fd5b610cc682600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461109090919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610d5b82600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546110a990919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b6000610e9e82600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546110a990919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600082821115151561109e57fe5b818303905092915050565b60008082840190508381101515156110bd57fe5b80915050929150505600a165627a7a723058202ddb88d91f3f84ca1561b22475c3d2f4cea07014060ab4f3a3c7deaf5eabade10029",
    "bytecode_runtime": "0x606060405236156100b8576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde03146100bd578063095ea7b31461014b57806318160ddd146101a557806323b872dd146101ce5780632ff2e9dc14610247578063313ce56714610270578063661884631461029f57806370a08231146102f957806395d89b4114610346578063a9059cbb146103d4578063d73dd6231461042e578063dd62ed3e14610488575b600080fd5b34156100c857600080fd5b6100d06104f4565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101105780820151818401526020810190506100f5565b50505050905090810190601f16801561013d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561015657600080fd5b61018b600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190505061052d565b604051808215151515815260200191505060405180910390f35b34156101b057600080fd5b6101b861061f565b6040518082815260200191505060405180910390f35b34156101d957600080fd5b61022d600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610625565b604051808215151515815260200191505060405180910390f35b341561025257600080fd5b61025a610911565b6040518082815260200191505060405180910390f35b341561027b57600080fd5b61028361091f565b604051808260ff1660ff16815260200191505060405180910390f35b34156102aa57600080fd5b6102df600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610924565b604051808215151515815260200191505060405180910390f35b341561030457600080fd5b610330600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610bb5565b6040518082815260200191505060405180910390f35b341561035157600080fd5b610359610bfe565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561039957808201518184015260208101905061037e565b50505050905090810190601f1680156103c65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156103df57600080fd5b610414600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610c37565b604051808215151515815260200191505060405180910390f35b341561043957600080fd5b61046e600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610e0d565b604051808215151515815260200191505060405180910390f35b341561049357600080fd5b6104de600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611009565b6040518082815260200191505060405180910390f35b6040805190810160405280600681526020017f44546f6b656e000000000000000000000000000000000000000000000000000081525081565b600081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b60005481565b600080600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415151561066457600080fd5b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905061073583600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461109090919063ffffffff16565b600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506107ca83600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546110a990919063ffffffff16565b600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610820838261109090919063ffffffff16565b600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a360019150509392505050565b600460ff16600a0a60d20281565b600481565b600080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905080831115610a35576000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610ac9565b610a48838261109090919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600191505092915050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6040805190810160405280600381526020017f44544e000000000000000000000000000000000000000000000000000000000081525081565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610c7457600080fd5b610cc682600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461109090919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610d5b82600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546110a990919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b6000610e9e82600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546110a990919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600082821115151561109e57fe5b818303905092915050565b60008082840190508381101515156110bd57fe5b80915050929150505600a165627a7a723058202ddb88d91f3f84ca1561b22475c3d2f4cea07014060ab4f3a3c7deaf5eabade10029",
    "devdoc": {
      "methods": {
        "allowance(address,address)": {
          "details": "Function to check the amount of tokens that an owner allowed to a spender.",
          "params": {
            "_owner": "address The address which owns the funds.",
            "_spender": "address The address which will spend the funds."
          },
          "return": "A uint256 specifying the amount of tokens still available for the spender."
        },
        "approve(address,uint256)": {
          "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.   * Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
          "params": {
            "_spender": "The address which will spend the funds.",
            "_value": "The amount of tokens to be spent."
          }
        },
        "balanceOf(address)": {
          "details": "Gets the balance of the specified address.",
          "params": {
            "_owner": "The address to query the the balance of."
          },
          "return": "An uint256 representing the amount owned by the passed address."
        },
        "transfer(address,uint256)": {
          "details": "transfer token for a specified address",
          "params": {
            "_to": "The address to transfer to.",
            "_value": "The amount to be transferred."
          }
        },
        "transferFrom(address,address,uint256)": {
          "details": "Transfer tokens from one address to another",
          "params": {
            "_from": "address The address which you want to send tokens from",
            "_to": "address The address which you want to transfer to",
            "_value": "uint256 the amount of tokens to be transferred"
          }
        }
      },
      "title": "DToken"
    },
    "direct_dependencies": [],
    "full_dependencies": [],
    "linkrefs": [],
    "linkrefs_runtime": [],
    "metadata": {
      "compiler": {
        "version": "0.4.17-develop.2017.9.27+commit.bdeb9e52"
      },
      "language": "Solidity",
      "output": {
        "abi": [
          {
            "constant": true,
            "inputs": [],
            "name": "name",
            "outputs": [
              {
                "name": "",
                "type": "string"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_spender",
                "type": "address"
              },
              {
                "name": "_value",
                "type": "uint256"
              }
            ],
            "name": "approve",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_from",
                "type": "address"
              },
              {
                "name": "_to",
                "type": "address"
              },
              {
                "name": "_value",
                "type": "uint256"
              }
            ],
            "name": "transferFrom",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "INITIAL_SUPPLY",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "decimals",
            "outputs": [
              {
                "name": "",
                "type": "uint8"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_spender",
                "type": "address"
              },
              {
                "name": "_subtractedValue",
                "type": "uint256"
              }
            ],
            "name": "decreaseApproval",
            "outputs": [
              {
                "name": "success",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "_owner",
                "type": "address"
              }
            ],
            "name": "balanceOf",
            "outputs": [
              {
                "name": "balance",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "symbol",
            "outputs": [
              {
                "name": "",
                "type": "string"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_to",
                "type": "address"
              },
              {
                "name": "_value",
                "type": "uint256"
              }
            ],
            "name": "transfer",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_spender",
                "type": "address"
              },
              {
                "name": "_addedValue",
                "type": "uint256"
              }
            ],
            "name": "increaseApproval",
            "outputs": [
              {
                "name": "success",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "_owner",
                "type": "address"
              },
              {
                "name": "_spender",
                "type": "address"
              }
            ],
            "name": "allowance",
            "outputs": [
              {
                "name": "remaining",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "constructor"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "owner",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "spender",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "Approval",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "from",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "to",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "Transfer",
            "type": "event"
          }
        ],
        "devdoc": {
          "methods": {
            "allowance(address,address)": {
              "details": "Function to check the amount of tokens that an owner allowed to a spender.",
              "params": {
                "_owner": "address The address which owns the funds.",
                "_spender": "address The address which will spend the funds."
              },
              "return": "A uint256 specifying the amount of tokens still available for the spender."
            },
            "approve(address,uint256)": {
              "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.   * Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
              "params": {
                "_spender": "The address which will spend the funds.",
                "_value": "The amount of tokens to be spent."
              }
            },
            "balanceOf(address)": {
              "details": "Gets the balance of the specified address.",
              "params": {
                "_owner": "The address to query the the balance of."
              },
              "return": "An uint256 representing the amount owned by the passed address."
            },
            "transfer(address,uint256)": {
              "details": "transfer token for a specified address",
              "params": {
                "_to": "The address to transfer to.",
                "_value": "The amount to be transferred."
              }
            },
            "transferFrom(address,address,uint256)": {
              "details": "Transfer tokens from one address to another",
              "params": {
                "_from": "address The address which you want to send tokens from",
                "_to": "address The address which you want to transfer to",
                "_value": "uint256 the amount of tokens to be transferred"
              }
            }
          },
          "title": "DToken"
        },
        "userdoc": {
          "methods": {
            "increaseApproval(address,uint256)": {
              "notice": "approve should be called when allowed[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol"
            }
          }
        }
      },
      "settings": {
        "compilationTarget": {
          "contracts/token/DToken.sol": "DToken"
        },
        "libraries": {},
        "optimizer": {
          "enabled": false,
          "runs": 200
        },
        "remappings": []
      },
      "sources": {
        "contracts/math/SafeMath.sol": {
          "keccak256": "0x3b3ed9d0691d123374b8a708fd29297acfbab4b5c04943eb1b6fbd3a081af53f",
          "urls": [
            "bzzr://608c82e3c21a2d7dff5076604ac00287752cb3d662d84088bc4e062c0a7d5386"
          ]
        },
        "contracts/token/BasicToken.sol": {
          "keccak256": "0xc3f91b60a61ee54633aeccfc04b788cb9b7326d67dfa0d9df3f24c16269bea9e",
          "urls": [
            "bzzr://0fae1d2f775f39c54bd88712d8389565eec72841506e58afd10357fbd25ecbfe"
          ]
        },
        "contracts/token/DToken.sol": {
          "keccak256": "0x4e8cbf84576dd2ecac796948f357df323636f12745e2625604fddb34391e6ec1",
          "urls": [
            "bzzr://e47a7573298af97c153ac536eb606fe4467a64cd1472c4826d820fe4514fbb31"
          ]
        },
        "contracts/token/ERC20.sol": {
          "keccak256": "0x48674c3983e4e9ba8f771d28e349833164934960a952966c17ae05f05fa84379",
          "urls": [
            "bzzr://ccc539a4548512ede8685c76d9f50ac3f5ef7b1f620dd68d609d52a1b0c6fbc9"
          ]
        },
        "contracts/token/ERC20Basic.sol": {
          "keccak256": "0xf3cea775f019fe99571ed85b792e2e34014976813155a2d51dbfa6b45df1bc44",
          "urls": [
            "bzzr://5a5100dd89548e0c8c04d4a87da1d02ddfaafb547b0377bd24a5735b56444658"
          ]
        },
        "contracts/token/StandardToken.sol": {
          "keccak256": "0xd21653958f1e5959162ede02f4f7fa7456f62081572c00b095afccf96ec34af6",
          "urls": [
            "bzzr://5eb7e4503742e86310f8a08abf95e1eb8d64db74c87a1b039e7e99f2f8ad0484"
          ]
        }
      },
      "version": 1
    },
    "name": "DToken",
    "ordered_full_dependencies": [],
    "source_path": "contracts/token/DToken.sol",
    "userdoc": {
      "methods": {
        "increaseApproval(address,uint256)": {
          "notice": "approve should be called when allowed[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol"
        }
      }
    }
  },
  "ERC20": {
    "abi": [
      {
        "constant": false,
        "inputs": [
          {
            "name": "spender",
            "type": "address"
          },
          {
            "name": "value",
            "type": "uint256"
          }
        ],
        "name": "approve",
        "outputs": [
          {
            "name": "",
            "type": "bool"
          }
        ],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [],
        "name": "totalSupply",
        "outputs": [
          {
            "name": "",
            "type": "uint256"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "from",
            "type": "address"
          },
          {
            "name": "to",
            "type": "address"
          },
          {
            "name": "value",
            "type": "uint256"
          }
        ],
        "name": "transferFrom",
        "outputs": [
          {
            "name": "",
            "type": "bool"
          }
        ],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [
          {
            "name": "who",
            "type": "address"
          }
        ],
        "name": "balanceOf",
        "outputs": [
          {
            "name": "",
            "type": "uint256"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "to",
            "type": "address"
          },
          {
            "name": "value",
            "type": "uint256"
          }
        ],
        "name": "transfer",
        "outputs": [
          {
            "name": "",
            "type": "bool"
          }
        ],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [
          {
            "name": "owner",
            "type": "address"
          },
          {
            "name": "spender",
            "type": "address"
          }
        ],
        "name": "allowance",
        "outputs": [
          {
            "name": "",
            "type": "uint256"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "name": "owner",
            "type": "address"
          },
          {
            "indexed": true,
            "name": "spender",
            "type": "address"
          },
          {
            "indexed": false,
            "name": "value",
            "type": "uint256"
          }
        ],
        "name": "Approval",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "name": "from",
            "type": "address"
          },
          {
            "indexed": true,
            "name": "to",
            "type": "address"
          },
          {
            "indexed": false,
            "name": "value",
            "type": "uint256"
          }
        ],
        "name": "Transfer",
        "type": "event"
      }
    ],
    "bytecode": "0x",
    "bytecode_runtime": "0x",
    "devdoc": {
      "methods": {},
      "title": "ERC20 interface"
    },
    "direct_dependencies": [],
    "full_dependencies": [],
    "linkrefs": [],
    "linkrefs_runtime": [],
    "metadata": null,
    "name": "ERC20",
    "ordered_full_dependencies": [],
    "source_path": "contracts/token/ERC20.sol",
    "userdoc": {
      "methods": {}
    }
  },
  "ERC20Basic": {
    "abi": [
      {
        "constant": true,
        "inputs": [],
        "name": "totalSupply",
        "outputs": [
          {
            "name": "",
            "type": "uint256"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [
          {
            "name": "who",
            "type": "address"
          }
        ],
        "name": "balanceOf",
        "outputs": [
          {
            "name": "",
            "type": "uint256"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "to",
            "type": "address"
          },
          {
            "name": "value",
            "type": "uint256"
          }
        ],
        "name": "transfer",
        "outputs": [
          {
            "name": "",
            "type": "bool"
          }
        ],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "name": "from",
            "type": "address"
          },
          {
            "indexed": true,
            "name": "to",
            "type": "address"
          },
          {
            "indexed": false,
            "name": "value",
            "type": "uint256"
          }
        ],
        "name": "Transfer",
        "type": "event"
      }
    ],
    "bytecode": "0x",
    "bytecode_runtime": "0x",
    "devdoc": {
      "methods": {},
      "title": "ERC20Basic"
    },
    "direct_dependencies": [],
    "full_dependencies": [],
    "linkrefs": [],
    "linkrefs_runtime": [],
    "metadata": null,
    "name": "ERC20Basic",
    "ordered_full_dependencies": [],
    "source_path": "contracts/token/ERC20Basic.sol",
    "userdoc": {
      "methods": {}
    }
  },
  "ERC223ReceivingContract": {
    "abi": [
      {
        "constant": false,
        "inputs": [
          {
            "name": "_from",
            "type": "address"
          },
          {
            "name": "_value",
            "type": "uint256"
          },
          {
            "name": "_data",
            "type": "bytes"
          }
        ],
        "name": "onTokenReceived",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      }
    ],
    "bytecode": "0x",
    "bytecode_runtime": "0x",
    "devdoc": {
      "methods": {
        "onTokenReceived(address,uint256,bytes)": {
          "details": "Standard ERC223 function that will handle incoming token transfers.",
          "params": {
            "_data": "Transaction metadata.",
            "_from": "Token sender address.",
            "_value": "Amount of tokens."
          }
        }
      },
      "title": "Contract that will work with ERC223 tokens."
    },
    "direct_dependencies": [],
    "full_dependencies": [],
    "linkrefs": [],
    "linkrefs_runtime": [],
    "metadata": null,
    "name": "ERC223ReceivingContract",
    "ordered_full_dependencies": [],
    "source_path": "contracts/token/ERC223ReceivingContract.sol",
    "userdoc": {
      "methods": {}
    }
  },
  "JoyGameAbstract": {
    "abi": [
      {
        "constant": true,
        "inputs": [],
        "name": "owner",
        "outputs": [
          {
            "name": "",
            "type": "address"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [],
        "name": "gameDev",
        "outputs": [
          {
            "name": "",
            "type": "address"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "newOwner",
            "type": "address"
          }
        ],
        "name": "transferOwnership",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "_playerAddr",
            "type": "address"
          },
          {
            "name": "_value",
            "type": "uint256"
          }
        ],
        "name": "startGame",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "name": "player",
            "type": "address"
          },
          {
            "indexed": false,
            "name": "start_balance",
            "type": "uint256"
          }
        ],
        "name": "NewGameSession",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "name": "player",
            "type": "address"
          },
          {
            "indexed": false,
            "name": "start_balance",
            "type": "uint256"
          },
          {
            "indexed": false,
            "name": "finalBalance",
            "type": "uint256"
          },
          {
            "indexed": false,
            "name": "hashOfGameProcess",
            "type": "bytes32"
          }
        ],
        "name": "EndGameInfo",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "name": "previousOwner",
            "type": "address"
          },
          {
            "indexed": true,
            "name": "newOwner",
            "type": "address"
          }
        ],
        "name": "OwnershipTransferred",
        "type": "event"
      }
    ],
    "bytecode": "0x",
    "bytecode_runtime": "0x",
    "devdoc": {
      "methods": {
        "startGame(address,uint256)": {
          "details": "Abstract external function that starts game session.",
          "params": {
            "_playerAddr": "Player address",
            "_value": "that will be given to the player in game session"
          }
        },
        "transferOwnership(address)": {
          "details": "Allows the current owner to transfer control of the contract to a newOwner.",
          "params": {
            "newOwner": "The address to transfer ownership to."
          }
        }
      }
    },
    "direct_dependencies": [],
    "full_dependencies": [],
    "linkrefs": [],
    "linkrefs_runtime": [],
    "metadata": null,
    "name": "JoyGameAbstract",
    "ordered_full_dependencies": [],
    "source_path": "contracts/game/JoyGameAbstract.sol",
    "userdoc": {
      "methods": {}
    }
  },
  "JoyGameDemo": {
    "abi": [
      {
        "constant": true,
        "inputs": [
          {
            "name": "_player",
            "type": "address"
          }
        ],
        "name": "playerLockedFunds",
        "outputs": [
          {
            "name": "",
            "type": "uint256"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "_playerAddr",
            "type": "address"
          },
          {
            "name": "_finalBalance",
            "type": "uint256"
          },
          {
            "name": "hashOfGameProcess",
            "type": "bytes32"
          }
        ],
        "name": "responseFromWS",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [],
        "name": "owner",
        "outputs": [
          {
            "name": "",
            "type": "address"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [],
        "name": "gameDev",
        "outputs": [
          {
            "name": "",
            "type": "address"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [
          {
            "name": "",
            "type": "address"
          }
        ],
        "name": "openSessions",
        "outputs": [
          {
            "name": "",
            "type": "bool"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "newOwner",
            "type": "address"
          }
        ],
        "name": "transferOwnership",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "_player",
            "type": "address"
          },
          {
            "name": "_value",
            "type": "uint256"
          }
        ],
        "name": "startGame",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "name": "_depositContract",
            "type": "address"
          },
          {
            "name": "_gameDev",
            "type": "address"
          }
        ],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "constructor"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "name": "player",
            "type": "address"
          },
          {
            "indexed": false,
            "name": "start_balance",
            "type": "uint256"
          }
        ],
        "name": "NewGameSession",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "name": "player",
            "type": "address"
          },
          {
            "indexed": false,
            "name": "start_balance",
            "type": "uint256"
          },
          {
            "indexed": false,
            "name": "finalBalance",
            "type": "uint256"
          },
          {
            "indexed": false,
            "name": "hashOfGameProcess",
            "type": "bytes32"
          }
        ],
        "name": "EndGameInfo",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "name": "previousOwner",
            "type": "address"
          },
          {
            "indexed": true,
            "name": "newOwner",
            "type": "address"
          }
        ],
        "name": "OwnershipTransferred",
        "type": "event"
      }
    ],
    "bytecode": "0x6060604052341561000f57600080fd5b604051604080610be283398101604052808051906020019091908051906020019091905050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6000604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b151561017b57600080fd5b6102c65a03f1151561018c57600080fd5b5050506040518051905073ffffffffffffffffffffffffffffffffffffffff161415156101b857600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506109d88061020a6000396000f30060606040523615610081576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630635fe9014610086578063262933cb146100d35780638da5cb5b14610122578063938a37ed14610177578063bc1b2634146101cc578063f2fde38b1461021d578063f399c7e614610256575b600080fd5b341561009157600080fd5b6100bd600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610298565b6040518082815260200191505060405180910390f35b34156100de57600080fd5b610120600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190803560001916906020019091905050610381565b005b341561012d57600080fd5b61013561041f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561018257600080fd5b61018a610444565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156101d757600080fd5b610203600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061046a565b604051808215151515815260200191505060405180910390f35b341561022857600080fd5b610254600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061048a565b005b341561026157600080fd5b610296600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506105df565b005b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630635fe90836000604051602001526040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b151561035f57600080fd5b6102c65a03f1151561037057600080fd5b505050604051805190509050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156103dc57600080fd5b61041a6060604051908101604052808573ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183600019168152506107bd565b505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026020528060005260406000206000915054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156104e557600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561052157600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561063b57600080fd5b60001515600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514151561069a57600080fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156106f657600080fd5b6001600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f94ce6c357ff85092600736e47b224445c7efd07bfb0c548a2d66660ae7686e808282604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a15050565b60006107cc8260000151610298565b90506000811115156107dd57600080fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663360aac67836000015184602001516040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b15156108a957600080fd5b6102c65a03f115156108ba57600080fd5b505050600060026000846000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f4934001d6f5f26b67fa26b453229bc5d69eadaf747b6ccb66365307d313e365f82600001518284602001518560400151604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001848152602001838152602001826000191660001916815260200194505050505060405180910390a150505600a165627a7a723058201d744b704b7e95daab3d975fcd06994acdcc921901ba20fa0c4dd346e409cc010029",
    "bytecode_runtime": "0x60606040523615610081576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630635fe9014610086578063262933cb146100d35780638da5cb5b14610122578063938a37ed14610177578063bc1b2634146101cc578063f2fde38b1461021d578063f399c7e614610256575b600080fd5b341561009157600080fd5b6100bd600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610298565b6040518082815260200191505060405180910390f35b34156100de57600080fd5b610120600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190803560001916906020019091905050610381565b005b341561012d57600080fd5b61013561041f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561018257600080fd5b61018a610444565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156101d757600080fd5b610203600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061046a565b604051808215151515815260200191505060405180910390f35b341561022857600080fd5b610254600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061048a565b005b341561026157600080fd5b610296600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506105df565b005b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630635fe90836000604051602001526040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b151561035f57600080fd5b6102c65a03f1151561037057600080fd5b505050604051805190509050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156103dc57600080fd5b61041a6060604051908101604052808573ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183600019168152506107bd565b505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026020528060005260406000206000915054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156104e557600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561052157600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561063b57600080fd5b60001515600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514151561069a57600080fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156106f657600080fd5b6001600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f94ce6c357ff85092600736e47b224445c7efd07bfb0c548a2d66660ae7686e808282604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a15050565b60006107cc8260000151610298565b90506000811115156107dd57600080fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663360aac67836000015184602001516040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b15156108a957600080fd5b6102c65a03f115156108ba57600080fd5b505050600060026000846000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f4934001d6f5f26b67fa26b453229bc5d69eadaf747b6ccb66365307d313e365f82600001518284602001518560400151604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001848152602001838152602001826000191660001916815260200194505050505060405180910390a150505600a165627a7a723058201d744b704b7e95daab3d975fcd06994acdcc921901ba20fa0c4dd346e409cc010029",
    "devdoc": {
      "methods": {
        "playerLockedFunds(address)": {
          "details": "get amount of locked funds from coresponding to this contracti, deposit contract Funds that are locked for the time of the game and waiting for game outcome."
        },
        "startGame(address,uint256)": {
          "details": "Brings information about locked tokens from player_account on depositContract for the time of the game.",
          "params": {
            "_player": "Player address",
            "_value": "that will be given to the player in game session"
          }
        },
        "transferOwnership(address)": {
          "details": "Allows the current owner to transfer control of the contract to a newOwner.",
          "params": {
            "newOwner": "The address to transfer ownership to."
          }
        }
      },
      "title": "JoyGameDemo Contract that is responsible only for one game, and uses external given deposit contract"
    },
    "direct_dependencies": [],
    "full_dependencies": [],
    "linkrefs": [],
    "linkrefs_runtime": [],
    "metadata": {
      "compiler": {
        "version": "0.4.17-develop.2017.9.27+commit.bdeb9e52"
      },
      "language": "Solidity",
      "output": {
        "abi": [
          {
            "constant": true,
            "inputs": [
              {
                "name": "_player",
                "type": "address"
              }
            ],
            "name": "playerLockedFunds",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_playerAddr",
                "type": "address"
              },
              {
                "name": "_finalBalance",
                "type": "uint256"
              },
              {
                "name": "hashOfGameProcess",
                "type": "bytes32"
              }
            ],
            "name": "responseFromWS",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "owner",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "gameDev",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "name": "openSessions",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "newOwner",
                "type": "address"
              }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_player",
                "type": "address"
              },
              {
                "name": "_value",
                "type": "uint256"
              }
            ],
            "name": "startGame",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "name": "_depositContract",
                "type": "address"
              },
              {
                "name": "_gameDev",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "constructor"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "name": "player",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "start_balance",
                "type": "uint256"
              }
            ],
            "name": "NewGameSession",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "name": "player",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "start_balance",
                "type": "uint256"
              },
              {
                "indexed": false,
                "name": "finalBalance",
                "type": "uint256"
              },
              {
                "indexed": false,
                "name": "hashOfGameProcess",
                "type": "bytes32"
              }
            ],
            "name": "EndGameInfo",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "previousOwner",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "newOwner",
                "type": "address"
              }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
          }
        ],
        "devdoc": {
          "methods": {
            "playerLockedFunds(address)": {
              "details": "get amount of locked funds from coresponding to this contracti, deposit contract Funds that are locked for the time of the game and waiting for game outcome."
            },
            "startGame(address,uint256)": {
              "details": "Brings information about locked tokens from player_account on depositContract for the time of the game.",
              "params": {
                "_player": "Player address",
                "_value": "that will be given to the player in game session"
              }
            },
            "transferOwnership(address)": {
              "details": "Allows the current owner to transfer control of the contract to a newOwner.",
              "params": {
                "newOwner": "The address to transfer ownership to."
              }
            }
          },
          "title": "JoyGameDemo Contract that is responsible only for one game, and uses external given deposit contract"
        },
        "userdoc": {
          "methods": {
            "startGame(address,uint256)": {
              "notice": "Override function"
            }
          }
        }
      },
      "settings": {
        "compilationTarget": {
          "contracts/game/JoyGameDemo.sol": "JoyGameDemo"
        },
        "libraries": {},
        "optimizer": {
          "enabled": false,
          "runs": 200
        },
        "remappings": []
      },
      "sources": {
        "contracts/deposit/PlatformDeposit.sol": {
          "keccak256": "0x83ba903040936cefb0e8fa9c3fb224363ba1f6e69c5ac6cfa19eca9156022602",
          "urls": [
            "bzzr://cc2621f25e4f68ff39a5514ed67e933994ce7f88d67e3a12fe67637e37a974a9"
          ]
        },
        "contracts/game/JoyGameAbstract.sol": {
          "keccak256": "0xea898552c61bc2680d79e1e6649287df970926e0464164ca4983a6f2d26062ab",
          "urls": [
            "bzzr://ca4b2afd5ae9b7ef0021c11ac506e119439809173030300a944144f6c3fd348d"
          ]
        },
        "contracts/game/JoyGameDemo.sol": {
          "keccak256": "0x2a4bde6bfbc9a9dedaeda3efb5983b2d1ce044e1ee4f39462961fb1ae78350f4",
          "urls": [
            "bzzr://6a490b8df9442ecc1509015ffc6bf6c58d2886317f42d8082ecb8ec5d521ba19"
          ]
        },
        "contracts/math/SafeMath.sol": {
          "keccak256": "0x3b3ed9d0691d123374b8a708fd29297acfbab4b5c04943eb1b6fbd3a081af53f",
          "urls": [
            "bzzr://608c82e3c21a2d7dff5076604ac00287752cb3d662d84088bc4e062c0a7d5386"
          ]
        },
        "contracts/ownership/Ownable.sol": {
          "keccak256": "0xff62dd381c74f7ea4ad360b6c05e7055463266e9ccd8c404e58606e1edff0778",
          "urls": [
            "bzzr://97ccd9342cf0374e45dd1ad705da1fe138fb7213293f57b763261b667002dc80"
          ]
        },
        "contracts/token/BasicToken.sol": {
          "keccak256": "0xc3f91b60a61ee54633aeccfc04b788cb9b7326d67dfa0d9df3f24c16269bea9e",
          "urls": [
            "bzzr://0fae1d2f775f39c54bd88712d8389565eec72841506e58afd10357fbd25ecbfe"
          ]
        },
        "contracts/token/ERC20.sol": {
          "keccak256": "0x48674c3983e4e9ba8f771d28e349833164934960a952966c17ae05f05fa84379",
          "urls": [
            "bzzr://ccc539a4548512ede8685c76d9f50ac3f5ef7b1f620dd68d609d52a1b0c6fbc9"
          ]
        },
        "contracts/token/ERC20Basic.sol": {
          "keccak256": "0xf3cea775f019fe99571ed85b792e2e34014976813155a2d51dbfa6b45df1bc44",
          "urls": [
            "bzzr://5a5100dd89548e0c8c04d4a87da1d02ddfaafb547b0377bd24a5735b56444658"
          ]
        },
        "contracts/token/ERC223ReceivingContract.sol": {
          "keccak256": "0xcd428f0f20847a95b640858c17fa4ce3b36780356b6ead80a9173279bef8e3f4",
          "urls": [
            "bzzr://6c3414b8606029ad1ab89b6f1302253231922e6f0bfe050eb76853daa1e4720b"
          ]
        },
        "contracts/token/JoyToken.sol": {
          "keccak256": "0x8df25986b231cd2d227f03a301d5e4c3538e22451c676ba38ddeb3db871365d3",
          "urls": [
            "bzzr://00a47540435b20b77fa2a7ada85b6bdad84f7a50f1c948139476be9f92a4e05b"
          ]
        },
        "contracts/token/StandardToken.sol": {
          "keccak256": "0xd21653958f1e5959162ede02f4f7fa7456f62081572c00b095afccf96ec34af6",
          "urls": [
            "bzzr://5eb7e4503742e86310f8a08abf95e1eb8d64db74c87a1b039e7e99f2f8ad0484"
          ]
        }
      },
      "version": 1
    },
    "name": "JoyGameDemo",
    "ordered_full_dependencies": [],
    "source_path": "contracts/game/JoyGameDemo.sol",
    "userdoc": {
      "methods": {
        "startGame(address,uint256)": {
          "notice": "Override function"
        }
      }
    }
  },
  "JoyToken": {
    "abi": [
      {
        "constant": true,
        "inputs": [],
        "name": "name",
        "outputs": [
          {
            "name": "",
            "type": "string"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "_spender",
            "type": "address"
          },
          {
            "name": "_value",
            "type": "uint256"
          }
        ],
        "name": "approve",
        "outputs": [
          {
            "name": "",
            "type": "bool"
          }
        ],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [],
        "name": "totalSupply",
        "outputs": [
          {
            "name": "",
            "type": "uint256"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "_from",
            "type": "address"
          },
          {
            "name": "_to",
            "type": "address"
          },
          {
            "name": "_value",
            "type": "uint256"
          }
        ],
        "name": "transferFrom",
        "outputs": [
          {
            "name": "",
            "type": "bool"
          }
        ],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [],
        "name": "INITIAL_SUPPLY",
        "outputs": [
          {
            "name": "",
            "type": "uint256"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [],
        "name": "decimals",
        "outputs": [
          {
            "name": "",
            "type": "uint8"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "_spender",
            "type": "address"
          },
          {
            "name": "_subtractedValue",
            "type": "uint256"
          }
        ],
        "name": "decreaseApproval",
        "outputs": [
          {
            "name": "success",
            "type": "bool"
          }
        ],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [
          {
            "name": "_owner",
            "type": "address"
          }
        ],
        "name": "balanceOf",
        "outputs": [
          {
            "name": "balance",
            "type": "uint256"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [],
        "name": "symbol",
        "outputs": [
          {
            "name": "",
            "type": "string"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "_to",
            "type": "address"
          },
          {
            "name": "_value",
            "type": "uint256"
          }
        ],
        "name": "transfer",
        "outputs": [
          {
            "name": "",
            "type": "bool"
          }
        ],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "_to",
            "type": "address"
          },
          {
            "name": "_value",
            "type": "uint256"
          },
          {
            "name": "_data",
            "type": "bytes"
          }
        ],
        "name": "transfer",
        "outputs": [
          {
            "name": "",
            "type": "bool"
          }
        ],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "_spender",
            "type": "address"
          },
          {
            "name": "_addedValue",
            "type": "uint256"
          }
        ],
        "name": "increaseApproval",
        "outputs": [
          {
            "name": "success",
            "type": "bool"
          }
        ],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [
          {
            "name": "_owner",
            "type": "address"
          },
          {
            "name": "_spender",
            "type": "address"
          }
        ],
        "name": "allowance",
        "outputs": [
          {
            "name": "remaining",
            "type": "uint256"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "constructor"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "name": "from",
            "type": "address"
          },
          {
            "indexed": true,
            "name": "to",
            "type": "address"
          },
          {
            "indexed": false,
            "name": "value",
            "type": "uint256"
          },
          {
            "indexed": true,
            "name": "data",
            "type": "bytes"
          }
        ],
        "name": "Transfer",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "name": "owner",
            "type": "address"
          },
          {
            "indexed": true,
            "name": "spender",
            "type": "address"
          },
          {
            "indexed": false,
            "name": "value",
            "type": "uint256"
          }
        ],
        "name": "Approval",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "name": "from",
            "type": "address"
          },
          {
            "indexed": true,
            "name": "to",
            "type": "address"
          },
          {
            "indexed": false,
            "name": "value",
            "type": "uint256"
          }
        ],
        "name": "Transfer",
        "type": "event"
      }
    ],
    "bytecode": "0x6060604052341561000f57600080fd5b601260ff16600a0a6301406f4002600081905550601260ff16600a0a6301406f4002600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611714806100836000396000f300606060405236156100c3576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde03146100c8578063095ea7b31461015657806318160ddd146101b057806323b872dd146101d95780632ff2e9dc14610252578063313ce5671461027b57806366188463146102aa57806370a082311461030457806395d89b4114610351578063a9059cbb146103df578063be45fd6214610439578063d73dd623146104d6578063dd62ed3e14610530575b600080fd5b34156100d357600080fd5b6100db61059c565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561011b578082015181840152602081019050610100565b50505050905090810190601f1680156101485780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561016157600080fd5b610196600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506105d5565b604051808215151515815260200191505060405180910390f35b34156101bb57600080fd5b6101c36106c7565b6040518082815260200191505060405180910390f35b34156101e457600080fd5b610238600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506106cd565b604051808215151515815260200191505060405180910390f35b341561025d57600080fd5b6102656109b9565b6040518082815260200191505060405180910390f35b341561028657600080fd5b61028e6109ca565b604051808260ff1660ff16815260200191505060405180910390f35b34156102b557600080fd5b6102ea600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506109cf565b604051808215151515815260200191505060405180910390f35b341561030f57600080fd5b61033b600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610c60565b6040518082815260200191505060405180910390f35b341561035c57600080fd5b610364610ca9565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103a4578082015181840152602081019050610389565b50505050905090810190601f1680156103d15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156103ea57600080fd5b61041f600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610ce2565b604051808215151515815260200191505060405180910390f35b341561044457600080fd5b6104bc600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050611047565b604051808215151515815260200191505060405180910390f35b34156104e157600080fd5b610516600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050611407565b604051808215151515815260200191505060405180910390f35b341561053b57600080fd5b610586600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611603565b6040518082815260200191505060405180910390f35b6040805190810160405280600881526020017f4a6f79546f6b656e00000000000000000000000000000000000000000000000081525081565b600081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b60005481565b600080600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415151561070c57600080fd5b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506107dd83600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461168a90919063ffffffff16565b600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061087283600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546116a390919063ffffffff16565b600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506108c8838261168a90919063ffffffff16565b600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a360019150509392505050565b601260ff16600a0a6301406f400281565b601281565b600080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905080831115610ae0576000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610b74565b610af3838261168a90919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600191505092915050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6040805190810160405280600381526020017f4a4f59000000000000000000000000000000000000000000000000000000000081525081565b6000610cec6116d4565b60008073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614151515610d2957600080fd5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548411151515610d7757600080fd5b610dc984600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461168a90919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610e5e84600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546116a390919063ffffffff16565b600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610eaa856116c1565b15610fd6578490508073ffffffffffffffffffffffffffffffffffffffff1663bed255423386856040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610f74578082015181840152602081019050610f59565b50505050905090810190601f168015610fa15780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b1515610fc157600080fd5b6102c65a03f11515610fd257600080fd5b5050505b8473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef866040518082815260200191505060405180910390a360019250505092915050565b600080600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161415151561108657600080fd5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205484111515156110d457600080fd5b61112684600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461168a90919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506111bb84600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546116a390919063ffffffff16565b600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611207856116c1565b15611333578490508073ffffffffffffffffffffffffffffffffffffffff1663bed255423386866040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156112d15780820151818401526020810190506112b6565b50505050905090810190601f1680156112fe5780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b151561131e57600080fd5b6102c65a03f1151561132f57600080fd5b5050505b826040518082805190602001908083835b6020831015156113695780518252602082019150602081019050602083039250611344565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390208573ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16876040518082815260200191505060405180910390a460019150509392505050565b600061149882600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546116a390919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600082821115151561169857fe5b818303905092915050565b60008082840190508381101515156116b757fe5b8091505092915050565b600080823b905060008111915050919050565b6020604051908101604052806000815250905600a165627a7a72305820568ab97eb78849d57cc5e4a4c203159bf058a94a17af36dd516449f41907aa180029",
    "bytecode_runtime": "0x606060405236156100c3576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde03146100c8578063095ea7b31461015657806318160ddd146101b057806323b872dd146101d95780632ff2e9dc14610252578063313ce5671461027b57806366188463146102aa57806370a082311461030457806395d89b4114610351578063a9059cbb146103df578063be45fd6214610439578063d73dd623146104d6578063dd62ed3e14610530575b600080fd5b34156100d357600080fd5b6100db61059c565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561011b578082015181840152602081019050610100565b50505050905090810190601f1680156101485780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561016157600080fd5b610196600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506105d5565b604051808215151515815260200191505060405180910390f35b34156101bb57600080fd5b6101c36106c7565b6040518082815260200191505060405180910390f35b34156101e457600080fd5b610238600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506106cd565b604051808215151515815260200191505060405180910390f35b341561025d57600080fd5b6102656109b9565b6040518082815260200191505060405180910390f35b341561028657600080fd5b61028e6109ca565b604051808260ff1660ff16815260200191505060405180910390f35b34156102b557600080fd5b6102ea600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506109cf565b604051808215151515815260200191505060405180910390f35b341561030f57600080fd5b61033b600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610c60565b6040518082815260200191505060405180910390f35b341561035c57600080fd5b610364610ca9565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103a4578082015181840152602081019050610389565b50505050905090810190601f1680156103d15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156103ea57600080fd5b61041f600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610ce2565b604051808215151515815260200191505060405180910390f35b341561044457600080fd5b6104bc600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050611047565b604051808215151515815260200191505060405180910390f35b34156104e157600080fd5b610516600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050611407565b604051808215151515815260200191505060405180910390f35b341561053b57600080fd5b610586600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611603565b6040518082815260200191505060405180910390f35b6040805190810160405280600881526020017f4a6f79546f6b656e00000000000000000000000000000000000000000000000081525081565b600081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b60005481565b600080600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415151561070c57600080fd5b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506107dd83600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461168a90919063ffffffff16565b600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061087283600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546116a390919063ffffffff16565b600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506108c8838261168a90919063ffffffff16565b600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a360019150509392505050565b601260ff16600a0a6301406f400281565b601281565b600080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905080831115610ae0576000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610b74565b610af3838261168a90919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600191505092915050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6040805190810160405280600381526020017f4a4f59000000000000000000000000000000000000000000000000000000000081525081565b6000610cec6116d4565b60008073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614151515610d2957600080fd5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548411151515610d7757600080fd5b610dc984600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461168a90919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610e5e84600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546116a390919063ffffffff16565b600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610eaa856116c1565b15610fd6578490508073ffffffffffffffffffffffffffffffffffffffff1663bed255423386856040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610f74578082015181840152602081019050610f59565b50505050905090810190601f168015610fa15780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b1515610fc157600080fd5b6102c65a03f11515610fd257600080fd5b5050505b8473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef866040518082815260200191505060405180910390a360019250505092915050565b600080600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161415151561108657600080fd5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205484111515156110d457600080fd5b61112684600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461168a90919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506111bb84600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546116a390919063ffffffff16565b600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611207856116c1565b15611333578490508073ffffffffffffffffffffffffffffffffffffffff1663bed255423386866040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156112d15780820151818401526020810190506112b6565b50505050905090810190601f1680156112fe5780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b151561131e57600080fd5b6102c65a03f1151561132f57600080fd5b5050505b826040518082805190602001908083835b6020831015156113695780518252602082019150602081019050602083039250611344565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390208573ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16876040518082815260200191505060405180910390a460019150509392505050565b600061149882600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546116a390919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600082821115151561169857fe5b818303905092915050565b60008082840190508381101515156116b757fe5b8091505092915050565b600080823b905060008111915050919050565b6020604051908101604052806000815250905600a165627a7a72305820568ab97eb78849d57cc5e4a4c203159bf058a94a17af36dd516449f41907aa180029",
    "devdoc": {
      "methods": {
        "allowance(address,address)": {
          "details": "Function to check the amount of tokens that an owner allowed to a spender.",
          "params": {
            "_owner": "address The address which owns the funds.",
            "_spender": "address The address which will spend the funds."
          },
          "return": "A uint256 specifying the amount of tokens still available for the spender."
        },
        "approve(address,uint256)": {
          "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.   * Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
          "params": {
            "_spender": "The address which will spend the funds.",
            "_value": "The amount of tokens to be spent."
          }
        },
        "balanceOf(address)": {
          "details": "Gets the balance of the specified address.",
          "params": {
            "_owner": "The address to query the the balance of."
          },
          "return": "An uint256 representing the amount owned by the passed address."
        },
        "transferFrom(address,address,uint256)": {
          "details": "Transfer tokens from one address to another",
          "params": {
            "_from": "address The address which you want to send tokens from",
            "_to": "address The address which you want to transfer to",
            "_value": "uint256 the amount of tokens to be transferred"
          }
        }
      },
      "title": "SimpleToken"
    },
    "direct_dependencies": [],
    "full_dependencies": [],
    "linkrefs": [],
    "linkrefs_runtime": [],
    "metadata": {
      "compiler": {
        "version": "0.4.17-develop.2017.9.27+commit.bdeb9e52"
      },
      "language": "Solidity",
      "output": {
        "abi": [
          {
            "constant": true,
            "inputs": [],
            "name": "name",
            "outputs": [
              {
                "name": "",
                "type": "string"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_spender",
                "type": "address"
              },
              {
                "name": "_value",
                "type": "uint256"
              }
            ],
            "name": "approve",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_from",
                "type": "address"
              },
              {
                "name": "_to",
                "type": "address"
              },
              {
                "name": "_value",
                "type": "uint256"
              }
            ],
            "name": "transferFrom",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "INITIAL_SUPPLY",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "decimals",
            "outputs": [
              {
                "name": "",
                "type": "uint8"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_spender",
                "type": "address"
              },
              {
                "name": "_subtractedValue",
                "type": "uint256"
              }
            ],
            "name": "decreaseApproval",
            "outputs": [
              {
                "name": "success",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "_owner",
                "type": "address"
              }
            ],
            "name": "balanceOf",
            "outputs": [
              {
                "name": "balance",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "symbol",
            "outputs": [
              {
                "name": "",
                "type": "string"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_to",
                "type": "address"
              },
              {
                "name": "_value",
                "type": "uint256"
              }
            ],
            "name": "transfer",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_to",
                "type": "address"
              },
              {
                "name": "_value",
                "type": "uint256"
              },
              {
                "name": "_data",
                "type": "bytes"
              }
            ],
            "name": "transfer",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_spender",
                "type": "address"
              },
              {
                "name": "_addedValue",
                "type": "uint256"
              }
            ],
            "name": "increaseApproval",
            "outputs": [
              {
                "name": "success",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "_owner",
                "type": "address"
              },
              {
                "name": "_spender",
                "type": "address"
              }
            ],
            "name": "allowance",
            "outputs": [
              {
                "name": "remaining",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "constructor"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "from",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "to",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "value",
                "type": "uint256"
              },
              {
                "indexed": true,
                "name": "data",
                "type": "bytes"
              }
            ],
            "name": "Transfer",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "owner",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "spender",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "Approval",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "from",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "to",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "Transfer",
            "type": "event"
          }
        ],
        "devdoc": {
          "methods": {
            "allowance(address,address)": {
              "details": "Function to check the amount of tokens that an owner allowed to a spender.",
              "params": {
                "_owner": "address The address which owns the funds.",
                "_spender": "address The address which will spend the funds."
              },
              "return": "A uint256 specifying the amount of tokens still available for the spender."
            },
            "approve(address,uint256)": {
              "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.   * Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
              "params": {
                "_spender": "The address which will spend the funds.",
                "_value": "The amount of tokens to be spent."
              }
            },
            "balanceOf(address)": {
              "details": "Gets the balance of the specified address.",
              "params": {
                "_owner": "The address to query the the balance of."
              },
              "return": "An uint256 representing the amount owned by the passed address."
            },
            "transferFrom(address,address,uint256)": {
              "details": "Transfer tokens from one address to another",
              "params": {
                "_from": "address The address which you want to send tokens from",
                "_to": "address The address which you want to transfer to",
                "_value": "uint256 the amount of tokens to be transferred"
              }
            }
          },
          "title": "SimpleToken"
        },
        "userdoc": {
          "methods": {
            "increaseApproval(address,uint256)": {
              "notice": "approve should be called when allowed[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol"
            },
            "transfer(address,uint256)": {
              "notice": "Standard function transfer similar to ERC20 transfer with no _data . Added due to backwards compatibility reasons."
            },
            "transfer(address,uint256,bytes)": {
              "notice": "Function that is called when a user or another contract wants to transfer funds."
            }
          }
        }
      },
      "settings": {
        "compilationTarget": {
          "contracts/token/JoyToken.sol": "JoyToken"
        },
        "libraries": {},
        "optimizer": {
          "enabled": false,
          "runs": 200
        },
        "remappings": []
      },
      "sources": {
        "contracts/math/SafeMath.sol": {
          "keccak256": "0x3b3ed9d0691d123374b8a708fd29297acfbab4b5c04943eb1b6fbd3a081af53f",
          "urls": [
            "bzzr://608c82e3c21a2d7dff5076604ac00287752cb3d662d84088bc4e062c0a7d5386"
          ]
        },
        "contracts/token/BasicToken.sol": {
          "keccak256": "0xc3f91b60a61ee54633aeccfc04b788cb9b7326d67dfa0d9df3f24c16269bea9e",
          "urls": [
            "bzzr://0fae1d2f775f39c54bd88712d8389565eec72841506e58afd10357fbd25ecbfe"
          ]
        },
        "contracts/token/ERC20.sol": {
          "keccak256": "0x48674c3983e4e9ba8f771d28e349833164934960a952966c17ae05f05fa84379",
          "urls": [
            "bzzr://ccc539a4548512ede8685c76d9f50ac3f5ef7b1f620dd68d609d52a1b0c6fbc9"
          ]
        },
        "contracts/token/ERC20Basic.sol": {
          "keccak256": "0xf3cea775f019fe99571ed85b792e2e34014976813155a2d51dbfa6b45df1bc44",
          "urls": [
            "bzzr://5a5100dd89548e0c8c04d4a87da1d02ddfaafb547b0377bd24a5735b56444658"
          ]
        },
        "contracts/token/ERC223ReceivingContract.sol": {
          "keccak256": "0xcd428f0f20847a95b640858c17fa4ce3b36780356b6ead80a9173279bef8e3f4",
          "urls": [
            "bzzr://6c3414b8606029ad1ab89b6f1302253231922e6f0bfe050eb76853daa1e4720b"
          ]
        },
        "contracts/token/JoyToken.sol": {
          "keccak256": "0x8df25986b231cd2d227f03a301d5e4c3538e22451c676ba38ddeb3db871365d3",
          "urls": [
            "bzzr://00a47540435b20b77fa2a7ada85b6bdad84f7a50f1c948139476be9f92a4e05b"
          ]
        },
        "contracts/token/StandardToken.sol": {
          "keccak256": "0xd21653958f1e5959162ede02f4f7fa7456f62081572c00b095afccf96ec34af6",
          "urls": [
            "bzzr://5eb7e4503742e86310f8a08abf95e1eb8d64db74c87a1b039e7e99f2f8ad0484"
          ]
        }
      },
      "version": 1
    },
    "name": "JoyToken",
    "ordered_full_dependencies": [],
    "source_path": "contracts/token/JoyToken.sol",
    "userdoc": {
      "methods": {
        "increaseApproval(address,uint256)": {
          "notice": "approve should be called when allowed[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol"
        },
        "transfer(address,uint256)": {
          "notice": "Standard function transfer similar to ERC20 transfer with no _data . Added due to backwards compatibility reasons."
        },
        "transfer(address,uint256,bytes)": {
          "notice": "Function that is called when a user or another contract wants to transfer funds."
        }
      }
    }
  },
  "Ownable": {
    "abi": [
      {
        "constant": true,
        "inputs": [],
        "name": "owner",
        "outputs": [
          {
            "name": "",
            "type": "address"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "newOwner",
            "type": "address"
          }
        ],
        "name": "transferOwnership",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "constructor"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "name": "previousOwner",
            "type": "address"
          },
          {
            "indexed": true,
            "name": "newOwner",
            "type": "address"
          }
        ],
        "name": "OwnershipTransferred",
        "type": "event"
      }
    ],
    "bytecode": "0x6060604052341561000f57600080fd5b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061027c8061005e6000396000f30060606040526000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680638da5cb5b14610048578063f2fde38b1461009d57600080fd5b341561005357600080fd5b61005b6100d6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156100a857600080fd5b6100d4600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506100fb565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561015657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561019257600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505600a165627a7a723058200558018a0e4873501abc389c81762177e7d1ae6faa5132f0ce2db6545355a5150029",
    "bytecode_runtime": "0x60606040526000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680638da5cb5b14610048578063f2fde38b1461009d57600080fd5b341561005357600080fd5b61005b6100d6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156100a857600080fd5b6100d4600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506100fb565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561015657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561019257600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505600a165627a7a723058200558018a0e4873501abc389c81762177e7d1ae6faa5132f0ce2db6545355a5150029",
    "devdoc": {
      "methods": {
        "transferOwnership(address)": {
          "details": "Allows the current owner to transfer control of the contract to a newOwner.",
          "params": {
            "newOwner": "The address to transfer ownership to."
          }
        }
      },
      "title": "Ownable"
    },
    "direct_dependencies": [],
    "full_dependencies": [],
    "linkrefs": [],
    "linkrefs_runtime": [],
    "metadata": {
      "compiler": {
        "version": "0.4.17-develop.2017.9.27+commit.bdeb9e52"
      },
      "language": "Solidity",
      "output": {
        "abi": [
          {
            "constant": true,
            "inputs": [],
            "name": "owner",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "newOwner",
                "type": "address"
              }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "constructor"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "previousOwner",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "newOwner",
                "type": "address"
              }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
          }
        ],
        "devdoc": {
          "methods": {
            "transferOwnership(address)": {
              "details": "Allows the current owner to transfer control of the contract to a newOwner.",
              "params": {
                "newOwner": "The address to transfer ownership to."
              }
            }
          },
          "title": "Ownable"
        },
        "userdoc": {
          "methods": {}
        }
      },
      "settings": {
        "compilationTarget": {
          "contracts/ownership/Ownable.sol": "Ownable"
        },
        "libraries": {},
        "optimizer": {
          "enabled": false,
          "runs": 200
        },
        "remappings": []
      },
      "sources": {
        "contracts/ownership/Ownable.sol": {
          "keccak256": "0xff62dd381c74f7ea4ad360b6c05e7055463266e9ccd8c404e58606e1edff0778",
          "urls": [
            "bzzr://97ccd9342cf0374e45dd1ad705da1fe138fb7213293f57b763261b667002dc80"
          ]
        }
      },
      "version": 1
    },
    "name": "Ownable",
    "ordered_full_dependencies": [],
    "source_path": "contracts/ownership/Ownable.sol",
    "userdoc": {
      "methods": {}
    }
  },
  "PlatformDeposit": {
    "abi": [
      {
        "constant": false,
        "inputs": [
          {
            "name": "_to",
            "type": "address"
          },
          {
            "name": "_value",
            "type": "uint256"
          }
        ],
        "name": "payOut",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [
          {
            "name": "_player",
            "type": "address"
          }
        ],
        "name": "playerLockedFunds",
        "outputs": [
          {
            "name": "",
            "type": "uint256"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "_player",
            "type": "address"
          },
          {
            "name": "_gameContractAddress",
            "type": "address"
          }
        ],
        "name": "transferToGame",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [
          {
            "name": "_player",
            "type": "address"
          }
        ],
        "name": "balanceOfPlayer",
        "outputs": [
          {
            "name": "",
            "type": "uint256"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "_playerAddr",
            "type": "address"
          },
          {
            "name": "_finalBalance",
            "type": "uint256"
          }
        ],
        "name": "accountGameResult",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [],
        "name": "platformReserve",
        "outputs": [
          {
            "name": "",
            "type": "address"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [],
        "name": "owner",
        "outputs": [
          {
            "name": "",
            "type": "address"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "_from",
            "type": "address"
          },
          {
            "name": "_value",
            "type": "uint256"
          },
          {
            "name": "_data",
            "type": "bytes"
          }
        ],
        "name": "onTokenReceived",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "newOwner",
            "type": "address"
          }
        ],
        "name": "transferOwnership",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "name": "_supportedToken",
            "type": "address"
          },
          {
            "name": "_platformReserve",
            "type": "address"
          }
        ],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "constructor"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "name": "previousOwner",
            "type": "address"
          },
          {
            "indexed": true,
            "name": "newOwner",
            "type": "address"
          }
        ],
        "name": "OwnershipTransferred",
        "type": "event"
      }
    ],
    "bytecode": "",
    "bytecode_runtime": "0x60606040523615610097576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630221038a1461009c5780630635fe90146100de57806313c709d41461012b5780632911982e14610183578063360aac67146101d057806342277097146102125780638da5cb5b14610267578063bed25542146102bc578063f2fde38b14610312575b600080fd5b34156100a757600080fd5b6100dc600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190505061034b565b005b34156100e957600080fd5b610115600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610536565b6040518082815260200191505060405180910390f35b341561013657600080fd5b610181600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061057f565b005b341561018e57600080fd5b6101ba600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506108dc565b6040518082815260200191505060405180910390f35b34156101db57600080fd5b610210600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610925565b005b341561021d57600080fd5b61022561106e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561027257600080fd5b61027a611094565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156102c757600080fd5b610310600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190803590602001908201803590602001919091929050506110b9565b005b341561031d57600080fd5b610349600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506111b0565b005b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054811115151561039957600080fd5b600015156103a683611305565b15151415156103b457600080fd5b61040681600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461131890919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b151561051657600080fd5b6102c65a03f1151561052757600080fd5b50505060405180519050505050565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156105dd57600080fd5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415151561063a57600080fd5b61064383611305565b151561064e57600080fd5b6000600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411151561069c57600080fd5b8291506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6000604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b151561074357600080fd5b6102c65a03f1151561075457600080fd5b5050506040518051905073ffffffffffffffffffffffffffffffffffffffff1614151561078057600080fd5b61078984611331565b90506107dd81600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461153690919063ffffffff16565b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff1663f399c7e685836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b15156108c257600080fd5b6102c65a03f115156108d357600080fd5b50505050505050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000806000806000803395506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6000604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15156109d557600080fd5b6102c65a03f115156109e657600080fd5b5050506040518051905073ffffffffffffffffffffffffffffffffffffffff16141515610a1257600080fd5b600360008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054871415610a6857610a6288611554565b50611064565b600360008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054871115610cf057610b01600360008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548861131890919063ffffffff16565b945060026000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548511151515610b7357600080fd5b610b7c88611554565b50610bf18560026000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461131890919063ffffffff16565b60026000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610ca885600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461153690919063ffffffff16565b600260008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611063565b610d4287600360008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461131890919063ffffffff16565b9350610d9684600360008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461131890919063ffffffff16565b600360008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555086600360008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054141515610e2657600080fd5b610e2f88611554565b50610e4460028561175990919063ffffffff16565b9250610e59838561131890919063ffffffff16565b915083828401141515610e6b57600080fd5b8573ffffffffffffffffffffffffffffffffffffffff1663938a37ed6000604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1515610ed757600080fd5b6102c65a03f11515610ee857600080fd5b505050604051805190509050610f4683600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461153690919063ffffffff16565b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610ffd8260026000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461153690919063ffffffff16565b60026000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b5b5050505050505050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561111557600080fd5b61116783600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461153690919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561120b57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561124757600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080823b905060008111915050919050565b600082821115151561132657fe5b818303905092915050565b600080600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506113c881600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461131890919063ffffffff16565b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414151561145957600080fd5b6114ab81600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461153690919063ffffffff16565b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054915050919050565b600080828401905083811015151561154a57fe5b8091505092915050565b600080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506115eb81600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461131890919063ffffffff16565b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414151561167c57600080fd5b6116ce81600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461153690919063ffffffff16565b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054915050919050565b600080828481151561176757fe5b04905080915050929150505600a165627a7a72305820d298cfcf1e398f039573ee2f701b427c31619bb7c2f0dbffa12cfeb3573f33a40029",
    "devdoc": {
      "methods": {
        "accountGameResult(address,uint256)": {
          "details": "function that can be called from registred 'game contract' after closing player session to update state.     * Unlock Tokens from game contract and distribute Tokens according to final balance.",
          "params": {
            "_finalBalance": "value that determine player wins and losses",
            "_playerAddr": "address of player that end his game session"
          }
        },
        "balanceOfPlayer(address)": {
          "details": "Gets the balance of the specified address.",
          "params": {
            "_player": "The address to query the the balance of."
          },
          "return": "An uint256 representing the amount owned by the passed address."
        },
        "onTokenReceived(address,uint256,bytes)": {
          "details": "Function that receive tokens, throw exception if tokens is not supported. This contract could recieve tokens, using functionalities designed in erc223 standard. !! works only with tokens designed in erc223 way."
        },
        "payOut(address,uint256)": {
          "details": "Function that could be executed by players to withdraw thier deposit"
        },
        "playerLockedFunds(address)": {
          "details": "Gets the locked funds of the specified address.",
          "params": {
            "_player": "Player address."
          },
          "return": "An uint256 representing the amount of locked tokens."
        },
        "transferOwnership(address)": {
          "details": "Allows the current owner to transfer control of the contract to a newOwner.",
          "params": {
            "newOwner": "The address to transfer ownership to."
          }
        },
        "transferToGame(address,address)": {
          "details": "Temporarily transfer funds to the game contract     * This method can be used to lock funds in order to perform specific actions by external contract. That contruct allow to adding new games without modyfing this contract. Important security check is that execution of this method will work: only if the owner of the game will be same as the owner of this contract",
          "params": {
            "_gameContractAddress": "address to the game contract",
            "_player": "address of registred player"
          }
        }
      }
    },
    "direct_dependencies": [],
    "full_dependencies": [],
    "linkrefs": [],
    "linkrefs_runtime": [],
    "metadata": {
      "compiler": {
        "version": "0.4.17-develop.2017.9.27+commit.bdeb9e52"
      },
      "language": "Solidity",
      "output": {
        "abi": [
          {
            "constant": false,
            "inputs": [
              {
                "name": "_to",
                "type": "address"
              },
              {
                "name": "_value",
                "type": "uint256"
              }
            ],
            "name": "payOut",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "_player",
                "type": "address"
              }
            ],
            "name": "playerLockedFunds",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_player",
                "type": "address"
              },
              {
                "name": "_gameContractAddress",
                "type": "address"
              }
            ],
            "name": "transferToGame",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "_player",
                "type": "address"
              }
            ],
            "name": "balanceOfPlayer",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_playerAddr",
                "type": "address"
              },
              {
                "name": "_finalBalance",
                "type": "uint256"
              }
            ],
            "name": "accountGameResult",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "platformReserve",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "owner",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_from",
                "type": "address"
              },
              {
                "name": "_value",
                "type": "uint256"
              },
              {
                "name": "_data",
                "type": "bytes"
              }
            ],
            "name": "onTokenReceived",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "newOwner",
                "type": "address"
              }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "name": "_supportedToken",
                "type": "address"
              },
              {
                "name": "_platformReserve",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "constructor"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "previousOwner",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "newOwner",
                "type": "address"
              }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
          }
        ],
        "devdoc": {
          "methods": {
            "accountGameResult(address,uint256)": {
              "details": "function that can be called from registred 'game contract' after closing player session to update state.     * Unlock Tokens from game contract and distribute Tokens according to final balance.",
              "params": {
                "_finalBalance": "value that determine player wins and losses",
                "_playerAddr": "address of player that end his game session"
              }
            },
            "balanceOfPlayer(address)": {
              "details": "Gets the balance of the specified address.",
              "params": {
                "_player": "The address to query the the balance of."
              },
              "return": "An uint256 representing the amount owned by the passed address."
            },
            "onTokenReceived(address,uint256,bytes)": {
              "details": "Function that receive tokens, throw exception if tokens is not supported. This contract could recieve tokens, using functionalities designed in erc223 standard. !! works only with tokens designed in erc223 way."
            },
            "payOut(address,uint256)": {
              "details": "Function that could be executed by players to withdraw thier deposit"
            },
            "playerLockedFunds(address)": {
              "details": "Gets the locked funds of the specified address.",
              "params": {
                "_player": "Player address."
              },
              "return": "An uint256 representing the amount of locked tokens."
            },
            "transferOwnership(address)": {
              "details": "Allows the current owner to transfer control of the contract to a newOwner.",
              "params": {
                "newOwner": "The address to transfer ownership to."
              }
            },
            "transferToGame(address,address)": {
              "details": "Temporarily transfer funds to the game contract     * This method can be used to lock funds in order to perform specific actions by external contract. That contruct allow to adding new games without modyfing this contract. Important security check is that execution of this method will work: only if the owner of the game will be same as the owner of this contract",
              "params": {
                "_gameContractAddress": "address to the game contract",
                "_player": "address of registred player"
              }
            }
          }
        },
        "userdoc": {
          "methods": {}
        }
      },
      "settings": {
        "compilationTarget": {
          "contracts/deposit/PlatformDeposit.sol": "PlatformDeposit"
        },
        "libraries": {},
        "optimizer": {
          "enabled": false,
          "runs": 200
        },
        "remappings": []
      },
      "sources": {
        "contracts/deposit/PlatformDeposit.sol": {
          "keccak256": "0x83ba903040936cefb0e8fa9c3fb224363ba1f6e69c5ac6cfa19eca9156022602",
          "urls": [
            "bzzr://cc2621f25e4f68ff39a5514ed67e933994ce7f88d67e3a12fe67637e37a974a9"
          ]
        },
        "contracts/game/JoyGameAbstract.sol": {
          "keccak256": "0xea898552c61bc2680d79e1e6649287df970926e0464164ca4983a6f2d26062ab",
          "urls": [
            "bzzr://ca4b2afd5ae9b7ef0021c11ac506e119439809173030300a944144f6c3fd348d"
          ]
        },
        "contracts/math/SafeMath.sol": {
          "keccak256": "0x3b3ed9d0691d123374b8a708fd29297acfbab4b5c04943eb1b6fbd3a081af53f",
          "urls": [
            "bzzr://608c82e3c21a2d7dff5076604ac00287752cb3d662d84088bc4e062c0a7d5386"
          ]
        },
        "contracts/ownership/Ownable.sol": {
          "keccak256": "0xff62dd381c74f7ea4ad360b6c05e7055463266e9ccd8c404e58606e1edff0778",
          "urls": [
            "bzzr://97ccd9342cf0374e45dd1ad705da1fe138fb7213293f57b763261b667002dc80"
          ]
        },
        "contracts/token/BasicToken.sol": {
          "keccak256": "0xc3f91b60a61ee54633aeccfc04b788cb9b7326d67dfa0d9df3f24c16269bea9e",
          "urls": [
            "bzzr://0fae1d2f775f39c54bd88712d8389565eec72841506e58afd10357fbd25ecbfe"
          ]
        },
        "contracts/token/ERC20.sol": {
          "keccak256": "0x48674c3983e4e9ba8f771d28e349833164934960a952966c17ae05f05fa84379",
          "urls": [
            "bzzr://ccc539a4548512ede8685c76d9f50ac3f5ef7b1f620dd68d609d52a1b0c6fbc9"
          ]
        },
        "contracts/token/ERC20Basic.sol": {
          "keccak256": "0xf3cea775f019fe99571ed85b792e2e34014976813155a2d51dbfa6b45df1bc44",
          "urls": [
            "bzzr://5a5100dd89548e0c8c04d4a87da1d02ddfaafb547b0377bd24a5735b56444658"
          ]
        },
        "contracts/token/ERC223ReceivingContract.sol": {
          "keccak256": "0xcd428f0f20847a95b640858c17fa4ce3b36780356b6ead80a9173279bef8e3f4",
          "urls": [
            "bzzr://6c3414b8606029ad1ab89b6f1302253231922e6f0bfe050eb76853daa1e4720b"
          ]
        },
        "contracts/token/JoyToken.sol": {
          "keccak256": "0x8df25986b231cd2d227f03a301d5e4c3538e22451c676ba38ddeb3db871365d3",
          "urls": [
            "bzzr://00a47540435b20b77fa2a7ada85b6bdad84f7a50f1c948139476be9f92a4e05b"
          ]
        },
        "contracts/token/StandardToken.sol": {
          "keccak256": "0xd21653958f1e5959162ede02f4f7fa7456f62081572c00b095afccf96ec34af6",
          "urls": [
            "bzzr://5eb7e4503742e86310f8a08abf95e1eb8d64db74c87a1b039e7e99f2f8ad0484"
          ]
        }
      },
      "version": 1
    },
    "name": "PlatformDeposit",
    "ordered_full_dependencies": [],
    "source_path": "contracts/deposit/PlatformDeposit.sol",
    "userdoc": {
      "methods": {}
    }
  },
  "SafeMath": {
    "abi": [],
    "bytecode": "0x60606040523415600e57600080fd5b603580601b6000396000f3006060604052600080fd00a165627a7a72305820e97e24748a5ca2f31ada95d93d84956581e22f404a45b18ec44c2b9759642ac70029",
    "bytecode_runtime": "0x6060604052600080fd00a165627a7a72305820e97e24748a5ca2f31ada95d93d84956581e22f404a45b18ec44c2b9759642ac70029",
    "devdoc": {
      "methods": {},
      "title": "SafeMath"
    },
    "direct_dependencies": [],
    "full_dependencies": [],
    "linkrefs": [],
    "linkrefs_runtime": [],
    "metadata": {
      "compiler": {
        "version": "0.4.17-develop.2017.9.27+commit.bdeb9e52"
      },
      "language": "Solidity",
      "output": {
        "abi": [],
        "devdoc": {
          "methods": {},
          "title": "SafeMath"
        },
        "userdoc": {
          "methods": {}
        }
      },
      "settings": {
        "compilationTarget": {
          "contracts/math/SafeMath.sol": "SafeMath"
        },
        "libraries": {},
        "optimizer": {
          "enabled": false,
          "runs": 200
        },
        "remappings": []
      },
      "sources": {
        "contracts/math/SafeMath.sol": {
          "keccak256": "0x3b3ed9d0691d123374b8a708fd29297acfbab4b5c04943eb1b6fbd3a081af53f",
          "urls": [
            "bzzr://608c82e3c21a2d7dff5076604ac00287752cb3d662d84088bc4e062c0a7d5386"
          ]
        }
      },
      "version": 1
    },
    "name": "SafeMath",
    "ordered_full_dependencies": [],
    "source_path": "contracts/math/SafeMath.sol",
    "userdoc": {
      "methods": {}
    }
  },
  "StandardToken": {
    "abi": [
      {
        "constant": false,
        "inputs": [
          {
            "name": "_spender",
            "type": "address"
          },
          {
            "name": "_value",
            "type": "uint256"
          }
        ],
        "name": "approve",
        "outputs": [
          {
            "name": "",
            "type": "bool"
          }
        ],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [],
        "name": "totalSupply",
        "outputs": [
          {
            "name": "",
            "type": "uint256"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "_from",
            "type": "address"
          },
          {
            "name": "_to",
            "type": "address"
          },
          {
            "name": "_value",
            "type": "uint256"
          }
        ],
        "name": "transferFrom",
        "outputs": [
          {
            "name": "",
            "type": "bool"
          }
        ],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "_spender",
            "type": "address"
          },
          {
            "name": "_subtractedValue",
            "type": "uint256"
          }
        ],
        "name": "decreaseApproval",
        "outputs": [
          {
            "name": "success",
            "type": "bool"
          }
        ],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [
          {
            "name": "_owner",
            "type": "address"
          }
        ],
        "name": "balanceOf",
        "outputs": [
          {
            "name": "balance",
            "type": "uint256"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "_to",
            "type": "address"
          },
          {
            "name": "_value",
            "type": "uint256"
          }
        ],
        "name": "transfer",
        "outputs": [
          {
            "name": "",
            "type": "bool"
          }
        ],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "_spender",
            "type": "address"
          },
          {
            "name": "_addedValue",
            "type": "uint256"
          }
        ],
        "name": "increaseApproval",
        "outputs": [
          {
            "name": "success",
            "type": "bool"
          }
        ],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [
          {
            "name": "_owner",
            "type": "address"
          },
          {
            "name": "_spender",
            "type": "address"
          }
        ],
        "name": "allowance",
        "outputs": [
          {
            "name": "remaining",
            "type": "uint256"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "name": "owner",
            "type": "address"
          },
          {
            "indexed": true,
            "name": "spender",
            "type": "address"
          },
          {
            "indexed": false,
            "name": "value",
            "type": "uint256"
          }
        ],
        "name": "Approval",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "name": "from",
            "type": "address"
          },
          {
            "indexed": true,
            "name": "to",
            "type": "address"
          },
          {
            "indexed": false,
            "name": "value",
            "type": "uint256"
          }
        ],
        "name": "Transfer",
        "type": "event"
      }
    ],
    "bytecode": "0x6060604052341561000f57600080fd5b610ece8061001e6000396000f3006060604052361561008c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063095ea7b31461009157806318160ddd146100eb57806323b872dd14610114578063661884631461018d57806370a08231146101e7578063a9059cbb14610234578063d73dd6231461028e578063dd62ed3e146102e8575b600080fd5b341561009c57600080fd5b6100d1600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610354565b604051808215151515815260200191505060405180910390f35b34156100f657600080fd5b6100fe610446565b6040518082815260200191505060405180910390f35b341561011f57600080fd5b610173600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190505061044c565b604051808215151515815260200191505060405180910390f35b341561019857600080fd5b6101cd600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610738565b604051808215151515815260200191505060405180910390f35b34156101f257600080fd5b61021e600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506109c9565b6040518082815260200191505060405180910390f35b341561023f57600080fd5b610274600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610a12565b604051808215151515815260200191505060405180910390f35b341561029957600080fd5b6102ce600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610be8565b604051808215151515815260200191505060405180910390f35b34156102f357600080fd5b61033e600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610de4565b6040518082815260200191505060405180910390f35b600081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b60005481565b600080600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415151561048b57600080fd5b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905061055c83600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e6b90919063ffffffff16565b600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506105f183600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e8490919063ffffffff16565b600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506106478382610e6b90919063ffffffff16565b600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a360019150509392505050565b600080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905080831115610849576000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506108dd565b61085c8382610e6b90919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600191505092915050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610a4f57600080fd5b610aa182600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e6b90919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610b3682600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e8490919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b6000610c7982600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e8490919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000828211151515610e7957fe5b818303905092915050565b6000808284019050838110151515610e9857fe5b80915050929150505600a165627a7a7230582034df9713f389954976a8168eae09cec3d771351f968fb278759a04132d6070ce0029",
    "bytecode_runtime": "0x6060604052361561008c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063095ea7b31461009157806318160ddd146100eb57806323b872dd14610114578063661884631461018d57806370a08231146101e7578063a9059cbb14610234578063d73dd6231461028e578063dd62ed3e146102e8575b600080fd5b341561009c57600080fd5b6100d1600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610354565b604051808215151515815260200191505060405180910390f35b34156100f657600080fd5b6100fe610446565b6040518082815260200191505060405180910390f35b341561011f57600080fd5b610173600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190505061044c565b604051808215151515815260200191505060405180910390f35b341561019857600080fd5b6101cd600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610738565b604051808215151515815260200191505060405180910390f35b34156101f257600080fd5b61021e600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506109c9565b6040518082815260200191505060405180910390f35b341561023f57600080fd5b610274600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610a12565b604051808215151515815260200191505060405180910390f35b341561029957600080fd5b6102ce600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610be8565b604051808215151515815260200191505060405180910390f35b34156102f357600080fd5b61033e600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610de4565b6040518082815260200191505060405180910390f35b600081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b60005481565b600080600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415151561048b57600080fd5b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905061055c83600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e6b90919063ffffffff16565b600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506105f183600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e8490919063ffffffff16565b600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506106478382610e6b90919063ffffffff16565b600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a360019150509392505050565b600080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905080831115610849576000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506108dd565b61085c8382610e6b90919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600191505092915050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610a4f57600080fd5b610aa182600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e6b90919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610b3682600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e8490919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b6000610c7982600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e8490919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000828211151515610e7957fe5b818303905092915050565b6000808284019050838110151515610e9857fe5b80915050929150505600a165627a7a7230582034df9713f389954976a8168eae09cec3d771351f968fb278759a04132d6070ce0029",
    "devdoc": {
      "methods": {
        "allowance(address,address)": {
          "details": "Function to check the amount of tokens that an owner allowed to a spender.",
          "params": {
            "_owner": "address The address which owns the funds.",
            "_spender": "address The address which will spend the funds."
          },
          "return": "A uint256 specifying the amount of tokens still available for the spender."
        },
        "approve(address,uint256)": {
          "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.   * Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
          "params": {
            "_spender": "The address which will spend the funds.",
            "_value": "The amount of tokens to be spent."
          }
        },
        "balanceOf(address)": {
          "details": "Gets the balance of the specified address.",
          "params": {
            "_owner": "The address to query the the balance of."
          },
          "return": "An uint256 representing the amount owned by the passed address."
        },
        "transfer(address,uint256)": {
          "details": "transfer token for a specified address",
          "params": {
            "_to": "The address to transfer to.",
            "_value": "The amount to be transferred."
          }
        },
        "transferFrom(address,address,uint256)": {
          "details": "Transfer tokens from one address to another",
          "params": {
            "_from": "address The address which you want to send tokens from",
            "_to": "address The address which you want to transfer to",
            "_value": "uint256 the amount of tokens to be transferred"
          }
        }
      },
      "title": "Standard ERC20 token"
    },
    "direct_dependencies": [],
    "full_dependencies": [],
    "linkrefs": [],
    "linkrefs_runtime": [],
    "metadata": {
      "compiler": {
        "version": "0.4.17-develop.2017.9.27+commit.bdeb9e52"
      },
      "language": "Solidity",
      "output": {
        "abi": [
          {
            "constant": false,
            "inputs": [
              {
                "name": "_spender",
                "type": "address"
              },
              {
                "name": "_value",
                "type": "uint256"
              }
            ],
            "name": "approve",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_from",
                "type": "address"
              },
              {
                "name": "_to",
                "type": "address"
              },
              {
                "name": "_value",
                "type": "uint256"
              }
            ],
            "name": "transferFrom",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_spender",
                "type": "address"
              },
              {
                "name": "_subtractedValue",
                "type": "uint256"
              }
            ],
            "name": "decreaseApproval",
            "outputs": [
              {
                "name": "success",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "_owner",
                "type": "address"
              }
            ],
            "name": "balanceOf",
            "outputs": [
              {
                "name": "balance",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_to",
                "type": "address"
              },
              {
                "name": "_value",
                "type": "uint256"
              }
            ],
            "name": "transfer",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_spender",
                "type": "address"
              },
              {
                "name": "_addedValue",
                "type": "uint256"
              }
            ],
            "name": "increaseApproval",
            "outputs": [
              {
                "name": "success",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "_owner",
                "type": "address"
              },
              {
                "name": "_spender",
                "type": "address"
              }
            ],
            "name": "allowance",
            "outputs": [
              {
                "name": "remaining",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "owner",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "spender",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "Approval",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "from",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "to",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "Transfer",
            "type": "event"
          }
        ],
        "devdoc": {
          "methods": {
            "allowance(address,address)": {
              "details": "Function to check the amount of tokens that an owner allowed to a spender.",
              "params": {
                "_owner": "address The address which owns the funds.",
                "_spender": "address The address which will spend the funds."
              },
              "return": "A uint256 specifying the amount of tokens still available for the spender."
            },
            "approve(address,uint256)": {
              "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.   * Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
              "params": {
                "_spender": "The address which will spend the funds.",
                "_value": "The amount of tokens to be spent."
              }
            },
            "balanceOf(address)": {
              "details": "Gets the balance of the specified address.",
              "params": {
                "_owner": "The address to query the the balance of."
              },
              "return": "An uint256 representing the amount owned by the passed address."
            },
            "transfer(address,uint256)": {
              "details": "transfer token for a specified address",
              "params": {
                "_to": "The address to transfer to.",
                "_value": "The amount to be transferred."
              }
            },
            "transferFrom(address,address,uint256)": {
              "details": "Transfer tokens from one address to another",
              "params": {
                "_from": "address The address which you want to send tokens from",
                "_to": "address The address which you want to transfer to",
                "_value": "uint256 the amount of tokens to be transferred"
              }
            }
          },
          "title": "Standard ERC20 token"
        },
        "userdoc": {
          "methods": {
            "increaseApproval(address,uint256)": {
              "notice": "approve should be called when allowed[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol"
            }
          }
        }
      },
      "settings": {
        "compilationTarget": {
          "contracts/token/StandardToken.sol": "StandardToken"
        },
        "libraries": {},
        "optimizer": {
          "enabled": false,
          "runs": 200
        },
        "remappings": []
      },
      "sources": {
        "contracts/math/SafeMath.sol": {
          "keccak256": "0x3b3ed9d0691d123374b8a708fd29297acfbab4b5c04943eb1b6fbd3a081af53f",
          "urls": [
            "bzzr://608c82e3c21a2d7dff5076604ac00287752cb3d662d84088bc4e062c0a7d5386"
          ]
        },
        "contracts/token/BasicToken.sol": {
          "keccak256": "0xc3f91b60a61ee54633aeccfc04b788cb9b7326d67dfa0d9df3f24c16269bea9e",
          "urls": [
            "bzzr://0fae1d2f775f39c54bd88712d8389565eec72841506e58afd10357fbd25ecbfe"
          ]
        },
        "contracts/token/ERC20.sol": {
          "keccak256": "0x48674c3983e4e9ba8f771d28e349833164934960a952966c17ae05f05fa84379",
          "urls": [
            "bzzr://ccc539a4548512ede8685c76d9f50ac3f5ef7b1f620dd68d609d52a1b0c6fbc9"
          ]
        },
        "contracts/token/ERC20Basic.sol": {
          "keccak256": "0xf3cea775f019fe99571ed85b792e2e34014976813155a2d51dbfa6b45df1bc44",
          "urls": [
            "bzzr://5a5100dd89548e0c8c04d4a87da1d02ddfaafb547b0377bd24a5735b56444658"
          ]
        },
        "contracts/token/StandardToken.sol": {
          "keccak256": "0xd21653958f1e5959162ede02f4f7fa7456f62081572c00b095afccf96ec34af6",
          "urls": [
            "bzzr://5eb7e4503742e86310f8a08abf95e1eb8d64db74c87a1b039e7e99f2f8ad0484"
          ]
        }
      },
      "version": 1
    },
    "name": "StandardToken",
    "ordered_full_dependencies": [],
    "source_path": "contracts/token/StandardToken.sol",
    "userdoc": {
      "methods": {
        "increaseApproval(address,uint256)": {
          "notice": "approve should be called when allowed[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol"
        }
      }
    }
  },
  "Subscription": {
    "abi": [
      {
        "constant": true,
        "inputs": [],
        "name": "subscriptionPrice",
        "outputs": [
          {
            "name": "",
            "type": "uint256"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [
          {
            "name": "",
            "type": "address"
          }
        ],
        "name": "subscriptionFrom",
        "outputs": [
          {
            "name": "",
            "type": "uint256"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [],
        "name": "owner",
        "outputs": [
          {
            "name": "",
            "type": "address"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "name": "previousOwner",
            "type": "address"
          },
          {
            "indexed": true,
            "name": "newOwner",
            "type": "address"
          }
        ],
        "name": "OwnershipTransferred",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "name": "buyer",
            "type": "address"
          },
          {
            "indexed": false,
            "name": "time",
            "type": "uint256"
          },
          {
            "indexed": false,
            "name": "price",
            "type": "uint256"
          }
        ],
        "name": "newSubscription",
        "type": "event"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "newPrice",
            "type": "uint256"
          }
        ],
        "name": "setSubscriptionPrice",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [],
        "name": "subscribe",
        "outputs": [],
        "payable": true,
        "stateMutability": "payable",
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "newOwner",
            "type": "address"
          }
        ],
        "name": "transferOwnership",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      }
    ]
  }
}
